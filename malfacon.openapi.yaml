openapi: 3.0.3

info:
  title: Malfacon API
  version: 2.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  description: |
    Cet outil permet la déclaration et le traitement d’une malfaçon grâce à des flux normalisés.

    ## Lexique

    #### OI

    Opérateur d’immeuble:
    Toute personne chargée de l’établissement ou de la gestion d’une ou plusieurs lignes dans un immeuble bâti,
    notamment dans le cadre d’une convention d’installation, d’entretien, de remplacement ou de gestion
    des lignes signée avec le propriétaire ou le syndicat de copropriétaires,
    en application de l’article L. 33-6 du code des postes et des communications électroniques ;
    l’opérateur d’immeuble n’est pas nécessairement un opérateur au sens de l’article L. 33-1 du même code.

    #### OC

    Opérateur Commercial
    Opérateur choisi par le client final pour la fourniture d'un service de télécommunications
    ou par un fournisseur d’accès au service pour la fourniture d’un service de télécommunications
    à son propre client final.

    #### Malfaçon

    Une malfaçon est une non-conformité issue de travaux menés dans le cadre
    d'une prestation de production ou de SAV sur un accès (PM/PBO/PTO),
    confiée à un intervenant selon un cahier des charges (STAS et règles de l'art).

    ## Processus

    1. La signalisation de malfaçons peut être faite par un OI vers OC comme par un OC vers un OI.

    2. Certaines malfaçons sont détectables aussi bien par un OI que par un OC,
        d’autres sont vues comme détectables uniquement par un OI ou uniquement par un OC.

    3. La signalisation de malfaçon par un OI vers un OC est une notification
        appelant action de la part de l’OC destinataire ou informant ce dernier
        d’une malfaçon n’appelant pas action de sa part.

        Cette notification suppose que l’OC pourra intervenir pour traiter la malfaçon:

        * Si les conditions font que c’est impossible et plus particulièrement sur un PM devenu inexploitable,
          alors l’OI doit procéder par une Remise En Conformité (REC)
        * Si l’OC constate lors de son intervention que l’état du PM ne lui permet pas de traiter la malfaçon,
          alors il aura la possibilité de le signaler en retour à l’OI.

    4. La signalisation de malfaçon par un OC vers un OI est une remontée d’information
        qui n’implique pas d’engagement de l’OC sur son niveau de précision:
        cette signalisation constitue une information complémentaire pour l’OI
        dans le cadre de l’exploitation de son réseau.

    5. De par sa définition, la Malfaçon se distingue de la notion de « Dysfonctionnement »
        dont est ici rappelée la définition Interop’Fibre:

            «
              Un dysfonctionnement est une problématique qui rend impossible
              l’adduction du réseau d’un OC au PM mis à disposition par un OI
            »

    6. A noter que les notions de « Dommages »,
        qui peuvent apparaître dans les contrats des OI, ne sont pas normalisées.
        Dans tous les cas, il est important que ces définitions contractuelles
        ne viennent pas recouvrir le périmètre de la Malfaçon.

    ## Dépendances

    Cette API utilise une architecture proxyfié pour la gestion des dépendances.

    ![Proxyfied architecture schema](https://raw.githubusercontent.com/ggrebert/before-interop-common/main/schema/architecture.drawio.svg)

    * [TroubleTicket](https://ggrebert.github.io/before-interop-common/?urls.primaryName=TroubleTicket)
    * [Attachment](https://ggrebert.github.io/before-interop-common/?urls.primaryName=Attachment)
    * [Note](https://ggrebert.github.io/before-interop-common/?urls.primaryName=Note)

    ## Diagrams

    <pre class="mermaid">
    graph LR
      Start --> Stop
    </pre>

servers:
- url: '{protocol}://{host}:{port}{basePath}/malfacon'
  variables:
    protocol:
      enum:
        - https
        - http
      default: https
    host:
      default: localhost
    port:
      default: '8080'
    basePath:
      default: /api

tags:
- name: TroubleTicket
  description: TroubleTicket management
- name: Note
  description: Note management
- name: Attachment
  description: Attachment management
- name: AttachmentNote
  description: AttachmentNote management

paths:
  /:
    get:
      tags:
      - TroubleTicket
      summary: List Malfacon
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/limit'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/offset'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/sort'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/fields.openapi.yaml#/components/parameters/fields'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The list of trouble tickets
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
            X-Result-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Result-Count'
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/MalfaconAny'
              example: |-
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43497","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43498","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43499","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d4349a","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MalfaconAny'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    head:
      tags:
      - TroubleTicket
      summary: Get the number of malfacon
      description: This method returns the number of malfacon matching the criteria.
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The number of malfacon
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    post:
      tags:
      - TroubleTicket
      summary: Create a malfacon
      description: This method allows to create a malfacon.
      requestBody:
        description: The malfacon to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MalfaconOne'
      responses:
        "201":
          description: The created malfacon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalfaconOne'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "409":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-409'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

  /{malfaconId}:
    parameters:
    - $ref: '#/components/parameters/malfaconId'

    get:
      tags:
      - TroubleTicket
      summary: Get a malfacon
      description: This method allows to get a malfacon.
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/fields.openapi.yaml#/components/parameters/fields'
      responses:
        "200":
          description: The malfacon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalfaconOne'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "404":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-404'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    put:
      tags:
      - TroubleTicket
      summary: Update a malfacon
      description: This method allows to update a malfacon.
      requestBody:
        description: The malfacon to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MalfaconOne'
      responses:
        "200":
          description: The updated malfacon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalfaconOne'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "404":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-404'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "409":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-409'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    patch:
      tags:
      - TroubleTicket
      summary: Partially update a malfacon
      description: This method allows to partially update a malfacon.
      requestBody:
        description: The data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MalfaconOne'
      responses:
        "200":
          description: The updated malfacon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalfaconOne'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "404":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-404'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "409":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-409'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

  /{malfaconId}/note:
    parameters:
    - $ref: '#/components/parameters/malfaconId'

    get:
      tags:
      - Note
      summary: List notes of a malfacon
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/limit'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/offset'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/sort'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/fields.openapi.yaml#/components/parameters/fields'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The list of notes
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
            X-Result-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Result-Count'
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Note'
              example: |-
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43497","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43498","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43499","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d4349a","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    head:
      tags:
      - Note
      summary: Get the number of notes of a malfacon
      description: This method returns the number of notes matching the criteria.
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The number of notes
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    post:
      tags:
      - Note
      summary: Create a note
      description: This method allows to create a note.
      requestBody:
        description: The note to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        "201":
          description: The created malfacon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "409":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-409'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

  /{malfaconId}/attachment:
    parameters:
    - $ref: '#/components/parameters/malfaconId'

    get:
      tags:
      - Attachment
      summary: List attachments
      description: |
        * If you use the `application/json` media type, the response will be a paginated list of attachments.
        * If you use the `text/event-stream` media type, the response will be a stream of attachments.

        **Note**:

        * The stream way does not support pagination. So the `limit` and `offset` query parameters will be ignored.
        * The paginated way will return a `206 Partial Content` response code.
        * The output can contain extra fields that are not defined in the API.
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/limit'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/offset'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/sort'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/fields.openapi.yaml#/components/parameters/fields'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The list of attachments
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
            X-Result-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Result-Count'
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Attachment'
              example: |-
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43497","date":"2023-04-10T07:22:24.510+00:00","text":"string","@baseType":"Note","@type":"Note"}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43498","date":"2023-04-10T07:22:24.510+00:00","text":"string","@baseType":"Note","@type":"Note"}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43499","date":"2023-04-10T07:22:24.510+00:00","text":"string","@baseType":"Note","@type":"Note"}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d4349a","date":"2023-04-10T07:22:24.510+00:00","text":"string","@baseType":"Note","@type":"Note"}
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    head:
      tags:
      - Attachment
      summary: Get the number of attachments
      description: This method returns the number of attachments matching the criteria.
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The number of attachments
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    post:
      tags:
      - Attachment
      summary: Create a attachment
      description: This method allows to create a attachment.
      requestBody:
        description: The attachment to create
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/tools/attachment/attachment.openapi.yaml#/components/schemas/AttachmentFormData'
      responses:
        "201":
          description: The created attachment
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/schemas/Attachment.openapi.yaml#/components/schemas/Attachment'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "409":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-409'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

  /{malfaconId}/attachment/{attachmentId}:
    parameters:
    - $ref: '#/components/parameters/malfaconId'
    - $ref: '#/components/parameters/attachmentId'

    get:
      tags:
      - Attachment
      summary: Get an attachment
      description: This method allows to get a attachment.
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/fields.openapi.yaml#/components/parameters/fields'
      responses:
        "200":
          description: The attachment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "404":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-404'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

  /{malfaconId}/attachment/{attachmentId}/content:
    parameters:
    - $ref: '#/components/parameters/malfaconId'
    - $ref: '#/components/parameters/attachmentId'

    get:
      tags:
      - Attachment
      summary: Download the content of an attachment
      description: This method allows to download the content of an attachment.
      responses:
        "200":
          description: The content of the attachment
          content:
            application/octet-stream: {}
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "404":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-404'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

  /{malfaconId}/attachment/{attachmentId}/note:
    parameters:
    - $ref: '#/components/parameters/malfaconId'
    - $ref: '#/components/parameters/attachmentId'

    get:
      tags:
      - AttachmentNote
      summary: List notes of an attachment
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/limit'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/offset'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/paginate.openapi.yaml#/components/parameters/sort'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/fields.openapi.yaml#/components/parameters/fields'
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The list of notes
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
            X-Result-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Result-Count'
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/NoteAttachment'
              example: |-
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43497","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43498","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d43499","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
                data:{"id":"987b8913-f7df-4af0-9bcd-c593d1d4349a","creationDate":"2023-04-10T07:22:24.510+00:00","lastUpdate":null,"resolutionDate":null,"expectedResolutionDate":null,"name":"My new ticket","description":"string","priority":"string","severity":"string","externalId":"string","@baseType":"TroubleTicket","@type":"TroubleTicket","closed":false}
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoteAttachment'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    head:
      tags:
      - AttachmentNote
      summary: Get the number of notes of an attachment
      description: This method returns the number of notes matching the criteria.
      parameters:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/parameters/filters.openapi.yaml#/components/parameters/filters'
      responses:
        "200":
          description: The number of notes
          headers:
            X-Total-Count:
              $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/headers/paginate.openapi.yaml#/components/headers/X-Total-Count'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

    post:
      tags:
      - AttachmentNote
      summary: Create a note for an attachment
      description: This method allows to create a note.
      requestBody:
        description: The note to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteAttachment'
      responses:
        "201":
          description: The created malfacon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteAttachment'
        "400":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-400'
        "401":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-401'
        "403":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-403'
        "406":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-406'
        "409":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-409'
        "500":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-500'
        "501":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-501'
        "502":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-502'
        "503":
          $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/responses/errors.openapi.yaml#/components/responses/Error-503'

components:
  schemas:
    MalfaconAny:
      anyOf:
      - $ref: '#/components/schemas/MalfaconPm'
      - $ref: '#/components/schemas/MalfaconAmontPm'
      - $ref: '#/components/schemas/MalfaconPmPbo'
      - $ref: '#/components/schemas/MalfaconPbo'
      - $ref: '#/components/schemas/MalfaconCcfCable'
      - $ref: '#/components/schemas/MalfaconCcfPto'

    MalfaconOne:
      oneOf:
      - $ref: '#/components/schemas/MalfaconPm'
      - $ref: '#/components/schemas/MalfaconAmontPm'
      - $ref: '#/components/schemas/MalfaconPmPbo'
      - $ref: '#/components/schemas/MalfaconPbo'
      - $ref: '#/components/schemas/MalfaconCcfCable'
      - $ref: '#/components/schemas/MalfaconCcfPto'

    MalfaconBase:
      allOf:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/schemas/TroubleTicket.openapi.yaml#/components/schemas/TroubleTicket'
      properties:
        '@type':
          default: Malfacon
          example: Malfacon
          readOnly: false
        '@baseType':
          default: Malfacon
          example: Malfacon
          enum:
            - Malfacon
        severity:
          description: |
            The severity of the malfacon

            Allowed values are:

            * `CRITICAL`

              Si la malfaçon représente un danger grave est imminent pour les personnes,
              l'OI se réserve le droit d'effectuer la reprise ou à minima sécurise les lieux
              et demande à l'OC d'intervenir.

              De son côté, l'OC se doit de signaler à l'OI toute malfaçon
              représentant un danger grave et imminent pour les personnes.

            * `MAJOR`

              La malfaçon signifie une détérioration du site technique ou un risque d'intéruption
              massive de service (dérangement collectif) ou un empêchement à produire
              de nouveaux client (depuis le passage de commande jusqu'au raccordement).

              Exemples:

              * défaut d'étanchéité sur PB
              * PM ouvert
              * site insalubre
              * brassage encombrant
              * données de localisation erronées

            * `MINOR`

              Les autres non conformités à corriger.
          enum:
            - CRITICAL
            - MAJOR
            - MINOR
        volumetry:
          description: The volumetrie of the malfacon
          type: integer
          example: 1
        quotePart:
          description: |
            The quote part of the malfacon

            TODO: should be replaced by `share` or `part` or `quota`
          type: number
          minimum: 0
          maximum: 1
        localizationDetails:
          type: string
        faultDetails:
          type: string

    MalfaconPm:
      allOf:
      - $ref: '#/components/schemas/MalfaconBase'
      properties:
        '@type':
          example: Pm
          enum:
          - Pm
        localizationDetails:
          enum:
          - TIROIR ZAPM
          - CONNECTEUR TIROIR ZAPM
          - BRASSAGE OC
          - TIROIR OC
          - ARMOIRE
          - ROUTE OPTIQUE
        faultDetails:
          enum:
          - mauvaise fixation ou fermeture dégradée
          - bouchon absent
          - cheminement non conforme aux STAS
          - brassage existant encombrant le cheminement
          - cordon non conforme aux STAS caractéristiques techniques
          - présence de cordons non conformes
          - présence de cordons à zéro non retirés
          - Caractéristiques tiroir non conforme aux STAS
          - implantation ou étiquetage non conforme aux STAS
          - mauvaise fixation
          - bouchon absent
          - dégradation majeure
          - Dégradations serrure, porte, tiroir cassé, tambours …
          - Environnement nettoyage déchets, fermeture
          - Etiquetage du PM non conforme hors échec de production
          - Non respect Route Optique communiquée
        pm:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PM
              enum:
              - PM

    MalfaconAmontPm:
      allOf:
      - $ref: '#/components/schemas/MalfaconBase'
      properties:
        '@type':
          example: AmontPm
          enum:
          - AmontPM
        localizationDetails:
          enum:
          - COLLECTE LIEN PM-PRDM
          - ADDUCTION OC
          - AMONT PM INSTALLATION
        faultDetails:
          enum:
          - brassage OC non conforme
          - tiroir OI dégradé
          - bouchon absent
          - cheminement câble OC/OI non conforme
          - implantation tiroir OC/OI ou étiquetage non conforme
          - brassage OC non conforme
          - passage de câble non conforme
        pm:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PM
              enum:
              - PM

    MalfaconPmPbo:
      allOf:
      - $ref: '#/components/schemas/MalfaconBase'
      properties:
        '@type':
          example: PmPbo
          enum:
          - PmPbo
        localizationDetails:
          enum:
          - PM-PBO INSTALLATION
        faultDetails:
          enum:
          - Absence de gaine demi-lune pour protéger câble PBO aérien, poteau ou façade
          - dégradation
        pm:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PM
              enum:
              - PM
        pbo:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PBO
              enum:
              - PBO

    MalfaconPbo:
      allOf:
      - $ref: '#/components/schemas/MalfaconBase'
      properties:
        '@type':
          example: Pbo
          enum:
          - Pbo
        localizationDetails:
          enum:
          - CASSETTE
          - BOITIER
          - PBO ENVIRONNEMENT
          - ROUTE OPTIQUE
        faultDetails:
          enum:
          - lovage fibre non conforme aux STAS
          - épissure non conforme dénudage, protection de soudure
          - boîtier PBO non/mal refermé, non/mal refixé,…
          - dégradation
          - boîtier PBO non /mal étiqueté hors échec production
          - localisation non conforme aux données OI commande accès hors échec production
          - dégradation du support PBO poteau
          - nettoyage chantier
          - lovage câble en chambre ou poteau non conforme aux STAS
          - Reprise sauvage Route Optique par casse soudure au PBO
          - Raccordement de site non déployé dans IPE
          - Non respect Route Optique communiquée
        pbo:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PBO
              enum:
              - PBO

    MalfaconCcfCable:
      allOf:
      - $ref: '#/components/schemas/MalfaconBase'
      properties:
        '@type':
          example: CcfCable
          enum:
          - CcfCable
        localizationDetails:
          enum:
          - CABLE CARACTERISTIQUE
          - CABLE INSTALLATION
          - ENTREE DE CABLE PBO
        faultDetails:
          enum:
          - étiquetage non conforme aux STAS
          - caractéristiques non conformes aux STAS
          - cheminement non conforme surplomb domaine privé,…
          - rebouchage non effectué
          - type de pose/fixation non conforme aux préconisations OI
          - absence protection obligatoire gaine fendue, demi-lune,…
          - non utilisable risque de surplomb, sécurisé
          - non utilisable pas d'autorisation de cheminement
          - bilan optique non conforme aux STAS
          - dégradation
          - nettoyage chantier
          - non conforme aux STAS
        refOrder:
          description: Référence de la commande
          type: string
        localization:
          description: Localisation GPS du câble
          $ref: '#/components/schemas/Localization'
        pbo:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PBO
              enum:
              - PBO
        pto:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PTO
              enum:
              - PTO

    MalfaconCcfPto:
      allOf:
      - $ref: '#/components/schemas/MalfaconBase'
      properties:
        '@type':
          example: CcfPto
          enum:
          - CcfPto
        localizationDetails:
          enum:
          - PTO CARACTERISTIQUE
          - PTO INSTALLATION
        faultDetails:
          enum:
          - caractéristiques non conformes aux STAS
          - pose non conforme implantation ou fixation
          - PTO mal ou non étiquetée
        localization:
          description: Localisation GPS de la PTO
          $ref: '#/components/schemas/Localization'
        pto:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          properties:
            '@type':
              example: PTO
              enum:
              - PTO

    Address:
      type: object
      properties:
        streetNumber:
          description: The street number
          type: string
          example: 1
        streetName:
          description: The street name
          type: string
          example: Rue de la Paix
        postalCode:
          description: The postal code
          type: string
          example: 75000
        city:
          description: The city
          type: string
          example: Paris
        country:
          description: The country
          type: string
          example: France
          default: France
        floor:
          description: The floor
          type: string
          example: 1
        building:
          description: The building
          type: string
          example: A

    Localization:
      type: object
      properties:
        latitude:
          description: The latitude
          type: number
          example: 48.8566
        longitude:
          description: The longitude
          type: number
          example: 2.3522

    Equipment:
      description: |
        An equipment is a physical entity that is part of the network.
        It can be a PM, a PBO, a PTO, a cable, a splice, a connector, etc.

        The equipment is identified by its ARCEP reference.
      allOf:
      - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/schemas/Entity.openapi.yaml#/components/schemas/Entity'
      type: object
      properties:
        id:
          readOnly: false
          description: The ARCEP reference of the equipement
        '@type':
          type: string
          readOnly: false
        '@baseType':
          type: string
          readOnly: true
          default: Equipement
          example: Equipement
        address:
          description: The address of the equipement
          $ref: '#/components/schemas/Address'

    Attachment:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/schemas/Attachment.openapi.yaml#/components/schemas/Attachment'
      properties:
        relatedEntity:
          description: Reference to the malfacon
          minItems: 1
          maxItems: 1

    AttachmentFormData:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/tools/attachment/attachment.openapi.yaml#/components/schemas/AttachmentFormData'
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'

    Note:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/schemas/Attachment.openapi.yaml#/components/schemas/Attachment'
      properties:
        relatedEntity:
          description: Reference to the malfacon
          minItems: 1
          maxItems: 1

    NoteAttachment:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/ggrebert/before-interop-common/main/common/schemas/Attachment.openapi.yaml#/components/schemas/Attachment'
      properties:
        relatedEntity:
          description: The first element is the reference of the malfacon, the second for the attachment.
          minItems: 2
          maxItems: 2

  parameters:
    malfaconId:
      name: malfaconId
      in: path
      description: The malfacon id
      required: true
      schema:
        type: string

    attachmentId:
      name: attachmentId
      in: path
      description: The attachment id
      required: true
      schema:
        type: string
